Unicode可以认为只是中间编码方法，或者是一个上百万个字符与上百万个数字之间对应的一张表，不过这张表为了简便和扩展，分为了17个小表，每个表可以容纳65536个字符，每个表存储特定类型的字符，第一张表存储常见字符，某个表存储绘图用字符，某个表存储渲染类字符...... 不过它只是一种中间状态，只会存在于内存中，之后在保存到硬盘便会按照具体编码规则（utf-8，GBK等等）对应存储成1~4个字节，如下图所示，其中中间Unicode所起的过渡作用并不涉及存储，只是一个概念，在内存中只会短暂保存字符所对应的数字，具体在内存中占用几个字节不太清楚。
存储文件类型中的unicode类型选项也只是UCS-2或utf-16，并不是真正的Unicode，估计是历史原因或习惯原因，
正是Unicode只是这也是Unicode为什么能表示如此大量的字符，他并不表示占几个字符。但到了具体的utf-8就有了详细的字节数，utf-8利用每个字节前的标识来标识该字符占用几个字节。

计算机内存中，统一使用Unicode编码，当需要保存到硬盘或者需要传输的时候，就转换为UTF-8编码。
用记事本编辑的时候，从文件读取的UTF-8字符被转换为Unicode字符到内存里，编辑完成后，保存的时候再把Unicode转换为UTF-8保存到文件
浏览网页的时候，服务器会把动态生成的Unicode内容转换为UTF-8再传输到浏览器

估计每个电脑有Unicode表，每个字符与其所对应的二进制（4个字节），这样存储时按表和规则进行转换

Unicode符号范围 |  UTF-8编码方式(十六进制)    |  （二进制）
—————————————————————–
0000 0000-0000 007F | 0xxxxxxx
0000 0080-0000 07FF | 110xxxxx 10xxxxxx
0000 0800-0000 FFFF | 1110xxxx 10xxxxxx 10xxxxxx
0001 0000-0010 FFFF | 11110xxx 10xxxxxx 10xxxxxx 10xxxxxx


Windows记事本保存文件里面有四个选项：ANSI，Unicode，Unicode big endian和UTF-8。
1）ANSI是默认的编码方式。对于英文文件是ASCII编码，对于简体中文文件是GB2312编码（只针对 Windows 简体中文版，如果是繁体中文版会采用 Big5 码）。
2）Unicode编码这里指的是notepad.exe使用的 UCS-2 编码方式，即直接用两个字节存入字符的 Unicode 码，这个选项用的 little endian 格式。
3）Unicode big endian编码与上一个选项相对应。意思似乎是是第二个字节在前？
4）UTF-8：带BOM的utf-8，特点如下：
utf-8文件（只有一个字“我”）若使用notepad的utf-8无BOM方式保存则只占用3个字节，符合utf-8标准，
而以Windows记事本保存的utf-8文件会自动加上BOM（三个字节 efbbbf），用于自己识别该文件，因此占用6个字节，另外需要注意的是，notepad++以无BOM保存的utf-8文件在Windows自带记事本再次保存后会自动加上BOM -_-||

如果是为了跨平台兼容性，只需要知道，在 Windows 记事本的语境中：
所谓的「ANSI」指的是对应当前系统 locale 的遗留（legacy）编码。
所谓的「Unicode」指的是带有 BOM 的小端序 UTF-16。
所谓的「UTF-8」指的是带 BOM 的 UTF-8。
下面是关于上面windows语境的一些词语的解释：
1.BOM（byte order mark）是为 UTF-16 和 UTF-32 准备的，用于标记字节序（byte order）。微软在 UTF-8 中使用 BOM 是因为这样可以把 UTF-8 和 ASCII 等编码明确区分开，但这样的文件在 Windows 之外的操作系统里会带来问题。
2.「UTF-8」和「带 BOM 的 UTF-8」的区别就是有没有 BOM。即文件开头有没有 U+FEFF。
